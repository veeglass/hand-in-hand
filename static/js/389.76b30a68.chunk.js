"use strict";(self.webpackChunkhan2han=self.webpackChunkhan2han||[]).push([[389],{12389:function(t,e,n){n.r(e),n.d(e,{MetamaskAdapter:function(){return k}});var r=n(15861),a=n(15671),i=n(43144),s=n(97326),c=n(11752),o=n(61120),h=n(60136),u=n(29388),d=n(87757),p=n.n(d),l=n(4942),m=n(80226),f=n.n(m),v=n(37949),k=function(t){(0,h.Z)(n,t);var e=(0,u.Z)(n);function n(){var t;(0,a.Z)(this,n);var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return t=e.call(this),(0,l.Z)((0,s.Z)(t),"adapterNamespace",v.yk.EIP155),(0,l.Z)((0,s.Z)(t),"currentChainNamespace",v.EN.EIP155),(0,l.Z)((0,s.Z)(t),"type",v.hN.EXTERNAL),(0,l.Z)((0,s.Z)(t),"name",v.rW.METAMASK),(0,l.Z)((0,s.Z)(t),"status",v.MP.NOT_READY),(0,l.Z)((0,s.Z)(t),"rehydrated",!1),(0,l.Z)((0,s.Z)(t),"metamaskProvider",null),t.chainConfig=r.chainConfig||null,t}return(0,i.Z)(n,[{key:"provider",get:function(){return this.status===v.MP.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null},set:function(t){throw new Error("Not implemented")}},{key:"init",value:function(){var t=(0,r.Z)(p().mark((function t(e){return p().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return(0,c.Z)((0,o.Z)(n.prototype),"checkInitializationRequirements",this).call(this),t.next=3,f()({mustBeMetaMask:!0});case 3:if(this.metamaskProvider=t.sent,this.metamaskProvider){t.next=6;break}throw v.Ty.notInstalled("Metamask extension is not installed");case 6:if(this.status=v.MP.READY,this.emit(v.n2.READY,v.rW.METAMASK),t.prev=8,!e.autoConnect){t.next=13;break}return this.rehydrated=!0,t.next=13,this.connect();case 13:t.next=18;break;case 15:t.prev=15,t.t0=t.catch(8),this.emit(v.n2.ERRORED,t.t0);case 18:case"end":return t.stop()}}),t,this,[[8,15]])})));return function(e){return t.apply(this,arguments)}}()},{key:"setAdapterSettings",value:function(t){}},{key:"connect",value:function(){var t=(0,r.Z)(p().mark((function t(){var e=this;return p().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if((0,c.Z)((0,o.Z)(n.prototype),"checkConnectionRequirements",this).call(this),this.chainConfig||(this.chainConfig=(0,v.h2)(v.EN.EIP155,1)),this.status=v.MP.CONNECTING,this.emit(v.n2.CONNECTING,{adapter:v.rW.METAMASK}),this.metamaskProvider){t.next=6;break}throw v.RM.notConnectedError("Not able to connect with metamask");case 6:return t.prev=6,t.next=9,this.metamaskProvider.request({method:"eth_requestAccounts"});case 9:if(this.metamaskProvider.chainId===this.chainConfig.chainId){t.next=13;break}return t.next=13,this.switchChain(this.chainConfig);case 13:if(this.status=v.MP.CONNECTED,this.provider){t.next=16;break}throw v.RM.notConnectedError("Failed to connect with provider");case 16:return this.provider.once("disconnect",(function(){e.disconnect()})),this.emit(v.n2.CONNECTED,{adapter:v.rW.METAMASK,reconnected:this.rehydrated}),t.abrupt("return",this.provider);case 21:throw t.prev=21,t.t0=t.catch(6),this.status=v.MP.READY,this.rehydrated=!1,this.emit(v.n2.ERRORED,t.t0),v.RM.connectionError("Failed to login with metamask wallet");case 27:case"end":return t.stop()}}),t,this,[[6,21]])})));return function(){return t.apply(this,arguments)}}()},{key:"disconnect",value:function(){var t=(0,r.Z)(p().mark((function t(){var e,n,r=arguments;return p().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(n=r.length>0&&void 0!==r[0]?r[0]:{cleanup:!1},this.status===v.MP.CONNECTED){t.next=3;break}throw v.RM.disconnectionError("Not connected with wallet");case 3:null===(e=this.provider)||void 0===e||e.removeAllListeners(),n.cleanup?(this.status=v.MP.NOT_READY,this.metamaskProvider=null):this.status=v.MP.READY,this.rehydrated=!1,this.emit(v.n2.DISCONNECTED);case 7:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}()},{key:"getUserInfo",value:function(){var t=(0,r.Z)(p().mark((function t(){return p().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.status===v.MP.CONNECTED){t.next=2;break}throw v.RM.notConnectedError("Not connected with wallet, Please login/connect first");case 2:return t.abrupt("return",{});case 3:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}()},{key:"switchChain",value:function(){var t=(0,r.Z)(p().mark((function t(e){return p().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.metamaskProvider){t.next=2;break}throw v.RM.notConnectedError("Not connected with wallet");case 2:return t.prev=2,t.next=5,this.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:e.chainId}]});case 5:case 12:t.next=15;break;case 7:if(t.prev=7,t.t0=t.catch(2),4902!==t.t0.code){t.next=14;break}return t.next=12,this.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:e.chainId,chainName:e.displayName,rpcUrls:[e.rpcTarget]}]});case 14:throw t.t0;case 15:case"end":return t.stop()}}),t,this,[[2,7]])})));return function(e){return t.apply(this,arguments)}}()}]),n}(v.J5)}}]);
//# sourceMappingURL=389.76b30a68.chunk.js.map